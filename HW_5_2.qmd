---
title: "Homework 5"
author: "Jack Cunningham"
format: html
editor: visual
---

```{r loading data}
temp_40 = c(1953, 2135, 2471, 4727, 6134, 6314)
temp_45 = c(1190, 1286, 1550, 2125, 2557, 2845)
temp_55 = c(651,  817,  848,  1038, 1361, 1543)
temp_70 = c(511,  651,  651,  652,  688,  729)
y = c(temp_40, temp_45, temp_55, temp_70)
T_40 = rep("T_40",6)
T_45 = rep("T_45",6)
T_55 = rep("T_55",6)
T_70 = rep("T_70",6)
temp = as.factor(c(T_40,T_45,T_55,T_70))
```

```{r models}
temp_aov   = aov(y ~ temp)
temp_model = lm(y ~ temp)
```

```{r aov summary}
summary(temp_aov)
```

```{r diagnostic plots}
plot(temp_model)
```

In the normal QQ plot, residuals seem symmetric.

```{r residuals}
temp_res = temp_model$residuals
stem(temp_res)
```

The stem plot looks right skewed.

```{r Shapiro Wilk Test}
shapiro.test(temp_res)
```

Our p-value is greater than 0.05, we cannot reject normality in this case.

```{r residual box plots}
plot(temp, temp_res)
```

Standard deviations are decreasing as temperature increases. In other words, standard deviations are increasing as temperature decreases.

```{r BFL test}
temp_matrix = rbind(temp_40,temp_45,temp_55,temp_70)
median = apply(temp_matrix,1,median)
z = abs(temp_matrix - median)
z_vector = c(t(z))

levi = aov(z_vector ~ temp)
summary(levi)
```

F test rejects null hypothesis that variances are equal.

```{r log sd vs log mean}
means = apply(temp_matrix, 1, mean)
stdv = apply(temp_matrix, 1, sd)
x_log = log(means)
y_log = log(stdv)
reg.fit = lm(y_log~x_log)
summary(reg.fit)
```

We use:

$$
x_{ij}=(y_{ij})^{1-\hat{\beta_1}}
$$

So since $\hat{\beta_1} \approx2$, we can consider using $y_{ij}^{-1}$.

```{r Box Cox}
library(MASS)
like = boxcox(y + 1 ~ temp, lambda = seq(-2.5,2.1,.01))
like_max = max(like$y)
imax = which(like$y == like_max)
thmax = like$x[imax]
thmax
```

Since theta is equal to -.64, box cox would suggest a square root transformation. But an inverse transformation is not out of range.

```{r y  transformed}
y_trans = 1/y
```

```{r shapiro wilk on transformed}
shapiro.test(y_trans)
```

We cannot reject normality with the transformed data.

```{r BF test on transformed data}
temp_matrix_trans = 1/temp_matrix
median_trans = apply(temp_matrix_trans,1,median)
z_trans = abs(temp_matrix_trans - median_trans)
z_vector_trans = c(t(z_trans))

levi_trans = aov(z_vector_trans ~ temp)
summary(levi_trans)
```

At a p-value of .193 we cannot reject the null hypothesis that the variances of each group are equal for the transformed data.

```{r Tukey HSD original data}
Compare_original = TukeyHSD(temp_aov, "temp", ordered = FALSE, .95)
Compare_original
```

T_45 and T_40 are different.

T_55 and T_40 are different.

T_70 and T_40 are different.

T_55 and T_45 are not different.

T_70 and T_45 are not different.

T_70 - T_55 are not different.

So there is a group of $(T_{45},T_{55},T_{70})$

```{r}
temp_trans_aov = aov(y_trans ~ temp)
Compare_trans = TukeyHSD(temp_trans_aov, "temp", ordered = FALSE, .95)
Compare_trans
```

T_45 and T_40 are different.

T_55 and T_40 are not different.

T_70 and T_40 are not different.

T_55 and T_45 are not different

T_70 and T_45 are not different.

T_70 and T_55 are not different.

So there is a group of $(T_{45},T_{55},T_{70})$.

Contrasts:

```{r per comparison}
1 - (1 - .05)^(1/3)
```

```{r}
linear = c(-5,-3,1,7)
quadratic = c(9,-3,-13,7)
cubic = c(-5,9,-5,1)
```

```{r trend contrasts original}
C = c(sum(linear*means), sum(quadratic*means), sum(cubic*means))
D = c(sum(linear^2), sum(quadratic^2), sum(cubic^2))
SS = C^2/(1/6 * D)
C
D
SS
```

```{r sum_of_squares original}
SStotal = sum((y - mean(y))^2)
SSerror = SStotal - sum(SS)
MSE = SSerror/21
```

```{r F test}
F = SS/MSE
p_values = 1 - pf(F, df1 = 1, df2 = 21)
p_values
```

```{r}
means = apply(1/temp_matrix, 1, mean)
C = c(sum(linear*means), sum(quadratic*means), sum(cubic*means))
D = c(sum(linear^2), sum(quadratic^2), sum(cubic^2))
SS = C^2/(1/6 * D)
C
D
SS
```

```{r}
SStotal = sum((1/y - mean(1/y))^2)
SSerror = SStotal - sum(SS)
MSE = SSerror/21
```

```{r}
F = SS/MSE
p_values = 1 - pf(F, df1 = 1, df2 = 21)
p_values
```
